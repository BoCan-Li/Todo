{"version":3,"sources":["component/Home.js","component/Todo.js","component/Todo/ShowList.js","component/Todo/Finish.js","component/Todo/Unfinish.js","router/router.config.js","router/router.js","reducer/showList.js","reducer/index.js","store/store.js","App.js","index.js"],"names":["Header","Layout","Content","Text","Typography","Home","this","props","data","to","size","bordered","dataSource","renderItem","item","name","check","time","Item","type","delete","Component","connect","state","showList","TabPane","Tabs","TabList","path","Todo","tabChange","key","history","push","saveData","e","inputValue","add","moment","format","setState","routes","pathname","location","value","onChange","target","onPressEnter","onClick","defaultActiveKey","activeKey","map","route","component","find","tab","dispatch","reqInfo","posts","ShowList","index","objs","checked","change","delClick","del","bind","finish","filter","Unfinish","routerList","exact","Finish","MyRouter","render","list","init","combineReducers","action","concat","splice","Store","createStore","reducer","applyMiddleware","thunk","logger","App","store","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7817c64.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Layout, List, Typography } from 'antd';\n\nconst { Header, Content } = Layout;\nconst { Text } = Typography\n\nclass Home extends Component {\n    render() {\n        const {data=[]} = this.props;\n        return (\n            <div>\n                <Header>\n                    <Link to={'/todo'}>TODO</Link>\n                </Header>\n                <Content>\n                    <List\n                        size=\"large\"\n                        bordered\n                        dataSource={data}\n                        renderItem={item => {\n                            const { name='', check='', time='' } = item\n                            return (\n                            <List.Item>\n                                {check?<Text type=\"success\" delete>{name}</Text>:<Text>{name}</Text>}\n                                <span>{time}</span>\n                            </List.Item>\n                        )}}\n                    />\n                </Content>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.showList.data\n})\n\nexport default connect(mapStateToProps, null)(Home)\n","import React, { Component } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Layout, Input, Button, Tabs} from 'antd';\nimport moment from 'moment'\n\nconst { Header, Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst TabList = [\n    {\n        path: '/todo/list',\n        name: '全部任务'\n    },\n    {\n        path: '/todo/finish',\n        name: '已完成'\n    },\n    {\n        path: '/todo/unfinish',\n        name: '待完成'\n    }\n]\n\nclass Todo extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            inputValue: ''\n        }\n    }\n\n    tabChange = (key)=>{\n        this.props.history.push(key)\n    }\n\n    saveData = (e)=>{\n        const { inputValue } = this.state\n        \n        this.props.add({\n            name: inputValue,\n            check: false,\n            time: moment().format('YYYY-MM-DD HH:mm:ss')\n        })\n        this.setState({\n            inputValue: ''\n        })\n    }\n\n    render() {\n        const {routes, location: {pathname}} = this.props;\n        const { inputValue } = this.state\n        return (\n            <div>\n                <Header>\n                    <Link to={'/'}>HOME</Link>\n                    <Input \n                        size=\"large\" \n                        value={inputValue} \n                        onChange={(e)=>(this.setState({ inputValue: e.target.value }))}\n                        onPressEnter = {this.saveData}\n                    />\n                    <Button type=\"primary\" onClick={this.saveData}>确定</Button>\n                </Header>\n                <Content>\n                    <Tabs defaultActiveKey=\"/todo/list\" activeKey={pathname} onChange={this.tabChange}>\n                        {\n                            routes.map(route=>{\n                                const { path, component } = route\n                                const { name='' } = TabList.find(item=>item.path === path) || {}\n                                return (\n                                <TabPane tab={name} key={path}>\n                                    <Switch>\n                                        <Route path={path} component={component} />\n                                    </Switch>\n                                </TabPane>\n                            )})\n                        }\n                    </Tabs>\n                </Content>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    showList: state.showList\n})\n\nconst mapDispatchToProps = (dispatch)=>({\n    add: (reqInfo)=>dispatch({\n        type: 'add',\n        posts: reqInfo\n    })\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Typography, Checkbox, Button } from 'antd';\n\nconst { Text } = Typography\n\nexport class ShowList extends Component {\n    onChange = (index, e)=> {\n        const objs = this.props.data[index] || {};\n        objs.check = e.target.checked;\n        this.props.change({\n            index,\n            objs\n        })\n    }\n\n    delClick = (index)=>{\n        this.props.del(index)\n    }\n\n    render() {\n        const {data} = this.props;\n        return (\n            <List\n                size=\"large\"\n                bordered\n                dataSource={data}\n                renderItem={(item, index) => {\n                    const { name='', check=false, time='' } = item\n                    return (\n                    <List.Item key={index}>\n                        <Checkbox checked={check} onChange={this.onChange.bind(this, index)}>是否完成</Checkbox>\n                        {check ? <Text type=\"success\" delete={true}>{name}</Text>:<Text>{name}</Text>}\n                        <span>{time}</span>\n                        <Button onClick={this.delClick.bind(this, index)}>删除</Button>\n                    </List.Item>\n                )}}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.showList.data\n})\n\nconst mapDispatchToProps = (dispatch)=>({\n    del: (reqInfo)=>dispatch({\n        type: 'del',\n        posts: reqInfo\n    }),\n    change: (reqInfo)=>dispatch({\n        type: 'change',\n        posts: reqInfo\n    }),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowList)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Typography } from 'antd';\n\nconst { Text } = Typography\n\nexport class finish extends Component {\n    render() {\n        let {data} = this.props;\n        data = data.filter(item=> item.check === true)\n        return (\n            <List\n                size=\"large\"\n                bordered\n                dataSource={data}\n                renderItem={(item, index) => {\n                    const { name='', time='' } = item\n                    return (\n                    <List.Item key={index}> \n                        <Text type=\"success\" delete={true}>{name}</Text>\n                        <span>{time}</span>\n                    </List.Item>\n                )}}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.showList.data\n})\n\nexport default connect(mapStateToProps, null)(finish)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Typography } from 'antd';\n\nconst { Text } = Typography\n\nexport class Unfinish extends Component {\n    render() {\n        let {data} = this.props;\n        data = data.filter(item=> item.check === false)\n        return (\n            <List\n                size=\"large\"\n                bordered\n                dataSource={data}\n                renderItem={(item, index) => {\n                    const { name='', time='' } = item\n                    return (\n                    <List.Item key={index}> \n                        <Text>{name}</Text>\n                        <span>{time}</span>\n                    </List.Item>\n                )}}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    data: state.showList.data\n})\n\nexport default connect(mapStateToProps, null)(Unfinish)\n","import Home from '../component/Home'\nimport Todo from '../component/Todo'\nimport ShowList from '../component/Todo/ShowList'\nimport Finish from '../component/Todo/Finish'\nimport Unfinish from '../component/Todo/Unfinish'\n\nconst routerList = [\n    {\n        path: '/',\n        exact: true,\n        component: Home\n    },\n    {\n        path: '/todo',\n        component: Todo,\n        routes: [\n            {\n                path: '/todo/list',\n                component: ShowList\n            },\n            {\n                path: '/todo/finish',\n                component: Finish\n            },\n            {\n                path: '/todo/unfinish',\n                component: Unfinish\n            }\n        ]\n    }\n]\nexport default routerList","import React from 'react'\nimport {BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport routerList from './router.config'\n\nexport default function MyRouter (){\n    return(\n        <Router>\n            <Switch>\n                <Route exact path=\"/todo\" render={()=><Redirect to={'/todo/list'}/>} />\n                {\n                    routerList.map(list=>{\n                        const {path, component, exact=false} = list;\n                        if(exact){\n                            return <Route key={path} exact path={path} component={component} />\n                        }\n                        return <Route \n                                    path={path} \n                                    key={path}\n                                    render={props=>(\n                                        <list.component {...props} routes={list.routes} />\n                                    )}\n                                />\n                    })\n                }\n            </Switch>\n        </Router>\n    )\n}\n","const init = {\n    data: []\n}\n\nexport default function showList (state=init, action){\n    const {data=[]} = state;\n    switch(action.type){\n        case 'add':\n            return {\n                ...state,\n                data: data.concat([action.posts])\n            }\n        case 'del':\n            data.splice(action.posts, 1)\n            return {\n                ...state,\n                data\n            }\n        case 'change':\n            data.splice(action.posts.index, 1, action.posts.objs)\n            return {\n                ...state,\n                data\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport showList from './showList'\n\nexport default combineReducers({\n    showList\n})","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport reducer from '../reducer'\nconst Store = createStore(\n    reducer,\n    applyMiddleware(thunk, logger)\n);\n\nexport default Store","import React from 'react';\nimport MyRouter from './router/router'\nimport { Provider } from 'react-redux'\nimport Store from './store/store'\n\nimport './app.css'\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <MyRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}